name: main

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Hadar
        unityVersion:
          - 2020.3.0f1
        targetPlatform:
          - StandaloneWindows64
          - WebGL
          
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Loading/Saving cached files
      uses: actions/cache@v2
      with:
        path: ${{ matrix.projectPath }}/Library
        key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
        restore-keys: |
          Library-${{ matrix.projectPath }}-
          Library-

    - name: Building project
      uses: game-ci/unity-builder@v2
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: ${{ matrix.projectPath }}
        unityVersion: ${{ matrix.unityVersion }}
        targetPlatform: ${{ matrix.targetPlatform }}
        
    - name: Uploading artefact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.projectPath }} - ${{ matrix.targetPlatform }}
        path: build

    - name: Update WebGL preview
      if: ${{ matrix.targetPlatform == 'WebGL' }}
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: website
        FOLDER: build/WebGL/WebGL
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      if: ${{ matrix.targetPlatform == 'StandaloneWindows64' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: ${{ matrix.targetPlatform == 'StandaloneWindows64' }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.projectPath }} - ${{ matrix.targetPlatform }}.zip
        asset_name: ${{ matrix.projectPath }}.zip
        asset_content_type: application/zip
